
<- Matrix ----------------------------------------------------------------------
Matrix representation and operation with matrix and vectors.
It expects an array with these keys:

- ’preset’: the matrix type to, mandatory. The value must be one
of the Class constants previoulsy defined.
- ’scale’: the scale factor, mandatory when 'preset' is worth
	SCALE.
- ’angle’: the rotation angle in radians, mandatory when 'preset'
is worth RX, RY or RZ.
- ’vtc’: translation vector, mandatory when 'preset' is worth
	TRANSLATION.
- ’fov’: projection field of view in degrees mandatory when
- 'preset' is worth PROJECTION.
- ’ratio’: projected image ratio, mandatory when 'preset' is worth
	PROJECTION.
- ’near’: projection’s near clipping plane mandatory when 'preset'
	is worth PROJECTION.
- ’far’: projection’s far clipping plane mandatory when 'preset'
	is worth PROJECTION.

The array needs to define a preset from:
IDENTITY, SCALE, RX, RY, RZ, TRANSLATION and PROJECTION.

Depending on the selected preset, the other keys need to have 
values as described above.

Verbose available as Matrix::verbose

It contains the following public methods:
- doc: shows documentation
- mult(Matrix $rhs): returns the multiplication of both matrices.
- transformVertex(Vertex $vtx): returns a new vertex resulting from
	the tranformation of the vertex by the matrix.
---------------------------------------------------------------------- Matrix ->
Let's start with an harmless identity matrix :
Matrix IDENTITY instance constructed
M | vtcX | vtcY | vtcZ | vtxO
-----------------------------
x | 1.00 | 0.00 | 0.00 | 0.00
y | 0.00 | 1.00 | 0.00 | 0.00
z | 0.00 | 0.00 | 1.00 | 0.00
w | 0.00 | 0.00 | 0.00 | 1.00

So far, so good. Let's create a translation matrix now.
Matrix TRANSLATION preset instance constructed
M | vtcX | vtcY | vtcZ | vtxO
-----------------------------
x | 1.00 | 0.00 | 0.00 | 20.00
y | 0.00 | 1.00 | 0.00 | 20.00
z | 0.00 | 0.00 | 1.00 | 0.00
w | 0.00 | 0.00 | 0.00 | 1.00

A scale matrix is no big deal.
Matrix SCALE preset instance constructed
M | vtcX | vtcY | vtcZ | vtxO
-----------------------------
x | 10.00 | 0.00 | 0.00 | 0.00
y | 0.00 | 10.00 | 0.00 | 0.00
z | 0.00 | 0.00 | 10.00 | 0.00
w | 0.00 | 0.00 | 0.00 | 1.00

A Rotation along the OX axis :
Matrix Ox ROTATION preset instance constructed
M | vtcX | vtcY | vtcZ | vtxO
-----------------------------
x | 1.00 | 0.00 | 0.00 | 0.00
y | 0.00 | 0.71 | -0.71 | 0.00
z | 0.00 | 0.71 | 0.71 | 0.00
w | 0.00 | 0.00 | 0.00 | 1.00

Or along the OY axis :
Matrix Oy ROTATION preset instance constructed
M | vtcX | vtcY | vtcZ | vtxO
-----------------------------
x | 0.00 | 0.00 | 1.00 | 0.00
y | 0.00 | 1.00 | 0.00 | 0.00
z | -1.00 | 0.00 | 0.00 | 0.00
w | 0.00 | 0.00 | 0.00 | 1.00

Do a barrel roll !
Matrix Oz ROTATION preset instance constructed
M | vtcX | vtcY | vtcZ | vtxO
-----------------------------
x | 1.00 | 0.00 | 0.00 | 0.00
y | -0.00 | 1.00 | 0.00 | 0.00
z | 0.00 | 0.00 | 1.00 | 0.00
w | 0.00 | 0.00 | 0.00 | 1.00

The bad guy now, the projection matrix : 3D to 2D !
The values are arbitray. We'll decipher them in the next exercice.
Matrix PROJECTION preset instance constructed
M | vtcX | vtcY | vtcZ | vtxO
-----------------------------
x | 1.30 | 0.00 | 0.00 | 0.00
y | 0.00 | 1.73 | 0.00 | 0.00
z | 0.00 | 0.00 | -0.96 | -1.96
w | 0.00 | 0.00 | -1.00 | 0.00

Matrices are so awesome, that they can be combined !
This is a model matrix that scales, then rotates around OY axis,
then rotates around OX axis and finally translates.
Please note the reverse operations order. It's not an error.
Matrix instance destructed
Matrix instance destructed
M | vtcX | vtcY | vtcZ | vtxO
-----------------------------
x | 0.00 | 0.00 | 10.00 | 20.00
y | 7.07 | 7.07 | -0.00 | 20.00
z | -7.07 | 7.07 | 0.00 | 0.00
w | 0.00 | 0.00 | 0.00 | 1.00

What can you do with a matrix and a vertex ?
Vertex( x: 1.00, y: 1.00, z:0.00, w:1.00 )
M | vtcX | vtcY | vtcZ | vtxO
-----------------------------
x | 0.00 | 0.00 | 10.00 | 20.00
y | 7.07 | 7.07 | -0.00 | 20.00
z | -7.07 | 7.07 | 0.00 | 0.00
w | 0.00 | 0.00 | 0.00 | 1.00
Transform the damn vertex !
Vertex( x: 20.00, y: 34.14, z:-0.00, w:1.00 )

Matrix instance destructed
Matrix instance destructed
Matrix instance destructed
Matrix instance destructed
Matrix instance destructed
Matrix instance destructed
Matrix instance destructed
Matrix instance destructed
